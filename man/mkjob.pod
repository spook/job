mkjob(8)
A manpage for B<job> - the Linux Batch Facility.

=pod

=head1 NAME

mkjob - Make job: Create and submit a batch job

=head1 SYNOPSIS

mkjob I<options> COMMAND [arguments...]

=head1 DESCRIPTION

B<mkjob> submits a new job to a batch queue.
Use --queue to specify the queue; otherwise the default queue is used.
Without --type, the first argument is required and interpreted as the
command to execute, any additional arguments are passed to COMMAND.
With --type, arguments are optional and passed as-is.
Job types must be defined in the queue's configuration before they can be
used.

=head1 OPTIONS

Mandatory arguments to long options are mandatory for short options too.

=over

=item -a, --at-time TIME

Schedule the job to run at this time (or as soon as possible thereafter,
depending on the current job load).  The default is the current time; which means
the job will run in th next minute or so.

=item -g, --group LIST

Indicates this is a group job, and supplies the list of stations (or accounts,
or node names -- whatever) that the group will iterate over.

A group job is a convienent way to submit multiple jobs that are nearly identical,
except for one value (the thing provided by LIST).  Example "things" are node names,
customer account number, and station IDs.  The job manager will create a child-job
for each item in the LIST, but it also keeps the original job so it can manage them
as a whole as well.  Status of the original group job will reflect the aggregate
status of all the child jobs; the group job is not considered complete until all 
its child jobs are complete.

The items in LIST must be simple identifiers consisting of letters, digits, dashes, 
underscores, and dots -- no whitespace is allowed.  Delimit each item with a comma.
For example:  C<104-A,302-Jt,933-5.3-QvvY>

=item -h, --help

Show this help message and exit.

=item -i, --affinity AFF

Set processor affinity.  (***NYI*** Not yet implemented)

=item -l, --log-level LEVEL

Set the internal log level; used for debugging.
Levels are (in order) fatal, error, warn, info, verbose, debug, verbosedebug, always, and silent.
Using the C<--verbose> option is equivalent to C<--log-level verbose> .

=item -n, --notify

Notify the user who submitted the job of significant events for the job.
Notifications are sent to their logged-in tty or pty device as simple
text messages.  Significant events are job start, job completion, job 
retry, group job split to child jobs, etc.

=item -p, --priority PRIO

Set the scheduling priority for the batch job.  Priority 1 is best, 9 is the worst,
and 5 is the default (but the queue can have its own default priority).

=item -q, --queue  QNAME

Specifies the queue to submit into.  If omitted, the system default queue will be used.

=item -#, --try-limit LIMIT

Specify the try limit for the job; a job that needs to retry will run no more than this many times.
The default is 100 attempts, but this default can be changed system-wide and on a per-queue basis.

=item -R, --root-dir DIR

Root directory of filesystem, default is /.
Queues will be placed under var/spool/job starting at this root.
If you need an entirely different location for the job queues,
consider softlinking to this location.  This option mostly used
for testing.

=item -s, --station-id SID

If a child job or a tied job, this is the station ID for it (or "whatever"
meaning you give to this identifier; see --group).  Ignored for single
or parent jobs.

=item -t, --type TEMPLATE

Use the pre-defined command TEMPLATE for the job.
When --type is given, the arguments to C<mkjob> are all considered
to be parameters to the TEMPLATE, and not a command.
The actual command is defined by the template.

=item -u, --submitter ID

Submitter for the job, defaults to this user's username.
If the job is submitted on-behalf of a remote user, such as via a REST API,
this specifies the true identity of the submitter: often the X.509 CN or their 
email address.

=item -v, --verbose

Show more output.

=back

=head1 COMMAND RESTRICTIONS

When not using a template type, the job's COMMAND and arguments are provided.
COMMAND must be a single program, script, or executable; 
it cannot be a series of commands piped together nor can any shell operations
be used, because the COMMAND is NOT RUN IN A SHELL.

  Good:   mkjob scp -p precious-file.tgz golum@middle.earth.net:
 
  Bad:    mkjob cat daily-report | tar xvzf -
                ^^^^^^^^^^^^^^^^___ only this part becomes the job
 
  Bad:    mkjob "cat daily-report | tar xvzf -"
             The whole string inside the quotes above, spaces and all, 
             is considered the binary to execute.  The quotes force it
             to be the single argument to mkjob. 
             Very doubtful a binary exists with that name!

Similarly, command aliases are not expanded; you must provide the actual 
commands, not the aliases.


=head1 EXAMPLES

  mkjob env  # just show the job's environment 
  mkjob financials/christmas-bonus-run.sh
  mkjob -n /home/support/remote-patch --system-id 4819101
  mkjob --type global-update --notify --priority 3
  mkjob --type remote-deploy --queue PRO --group 4762,8375,773,0985,7721,6824

=head1 SEE ALSO

job(7), job.conf(5), edjobq(5), lsjobq(8), mkjobq(8), rmjobq(8), catjob(8), edjob(8), lsjob(8), rmjob(8), jobman(8)

=head1 BUGS

Use the issue tracker at L<https://github.com/spook/job> .  
Don't be shy; check what's already reported and if you have a new bug,
please let me know!

=head1 COPYRIGHT

LGPL 2.1+

job - the Linux Batch Facility
(c) Copyright 2014-2016 Hewlett Packard Enterprise Development LP
Created by Uncle Spook <spook(at)MisfitMountain(dot)org>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301
USA

